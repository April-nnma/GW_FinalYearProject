generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  user_id       Int       @id @default(autoincrement())
  fullname      String?   @db.VarChar(255)
  email         String?   @db.VarChar(255)
  date_of_birth DateTime? @db.Date
  password      String?   @db.VarChar(255)
  comment       comment[]
  post          post[]
  react         react[]
}

model comment {
  comment_id Int    @id @default(autoincrement())
  user_id    Int
  post_id    Int
  message    String @db.VarChar(255)
  user       user   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_1")
  post       post   @relation(fields: [post_id], references: [post_id], onDelete: NoAction, onUpdate: NoAction, map: "comment_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model post {
  post_id        Int       @id @default(autoincrement())
  user_id_create Int
  comment        comment[]
  user           user      @relation(fields: [user_id_create], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "post_ibfk_1")
  react          react[]

  @@index([user_id_create], map: "user_id_create")
}

model react {
  react_id Int     @id @default(autoincrement())
  user_id  Int?
  post_id  Int?
  reaction String? @default("neutral") @db.VarChar(255)
  user     user?   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "react_ibfk_1")
  post     post?   @relation(fields: [post_id], references: [post_id], onDelete: NoAction, onUpdate: NoAction, map: "react_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}
